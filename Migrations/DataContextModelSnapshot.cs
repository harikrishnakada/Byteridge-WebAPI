// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientIp");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<DateTime>("LastChangedDateTime");

                    b.Property<DateTime>("LoggedInDateTime");

                    b.Property<int>("LoggedInUserId");

                    b.Property<DateTime?>("LoggedOutDateTime");

                    b.HasKey("Id");

                    b.HasIndex("LoggedInUserId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("WebApi.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("DisplayName");

                    b.Property<string>("InternalIdentifier");

                    b.Property<string>("LandingPageUrl");

                    b.Property<DateTime>("LastChangedDateTime");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2020, 5, 25, 10, 49, 50, 805, DateTimeKind.Local).AddTicks(1190),
                            DisplayName = "Auditor",
                            InternalIdentifier = "INTERNAL_AUDITOR",
                            LandingPageUrl = "/audit",
                            LastChangedDateTime = new DateTime(2020, 5, 25, 10, 49, 50, 805, DateTimeKind.Local).AddTicks(7426)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2020, 5, 25, 10, 49, 50, 805, DateTimeKind.Local).AddTicks(7905),
                            DisplayName = "User",
                            InternalIdentifier = "USER",
                            LandingPageUrl = "/",
                            LastChangedDateTime = new DateTime(2020, 5, 25, 10, 49, 50, 805, DateTimeKind.Local).AddTicks(7909)
                        });
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("LastChangedDateTime");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int>("RoleId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApi.Entities.Audit", b =>
                {
                    b.HasOne("WebApi.Entities.User", "LoggedInUser")
                        .WithMany()
                        .HasForeignKey("LoggedInUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.HasOne("WebApi.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
